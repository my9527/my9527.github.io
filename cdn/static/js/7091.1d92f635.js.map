{"version":3,"file":"static/js/7091.1d92f635.js","mappings":"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","sources":["../node_modules/ieee754/index.js","../node_modules/immer/src/utils/errors.ts","../node_modules/immer/src/utils/common.ts","../node_modules/immer/src/utils/plugins.ts","../node_modules/immer/src/core/scope.ts","../node_modules/immer/src/core/finalize.ts","../node_modules/immer/src/core/proxy.ts","../node_modules/immer/src/core/immerClass.ts","../node_modules/immer/src/core/current.ts","../node_modules/immer/src/plugins/es5.ts","../node_modules/immer/src/plugins/patches.ts","../node_modules/immer/src/immer.ts","../node_modules/immer/src/utils/env.ts"],"sourcesContent":["/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t},\n\t24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtype,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor?.[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === Archtype.Object) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): Archtype {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? Archtype.Array\n\t\t: isMap(thing)\n\t\t? Archtype.Map\n\t\t: isSet(thing)\n\t\t? Archtype.Set\n\t\t: Archtype.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === Archtype.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === Archtype.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === Archtype.Map) thing.set(propOrOldValue, value)\n\telse if (t === Archtype.Set) {\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: ProxyType.ES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: ProxyType.ES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ProxyType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ProxyType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyType,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyType.ProxyObject ||\n\t\tstate.type_ === ProxyType.ProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumerable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyType.ES5Object || state.type_ === ProxyType.ES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// To preserve insertion order in all cases we then clear the set\n\t\t// And we let finalizeProperty know it needs to re-add non-draft children back to the target\n\t\tlet resultEach = result\n\t\tlet isSet = false\n\t\tif (state.type_ === ProxyType.Set) {\n\t\t\tresultEach = new Set(result)\n\t\t\tresult.clear()\n\t\t\tisSet = true\n\t\t}\n\t\teach(resultEach, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path, isSet)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath,\n\ttargetIsSet?: boolean\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t} else if (targetIsSet) {\n\t\ttargetObject.add(childValue)\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\t// we never freeze for a non-root scope; as it would prevent pruning for drafts inside wrapping objects\n\tif (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyType\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyType.ProxyArray : (ProxyType.ProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\t(state.copy_![prop] === value &&\n\t\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t\t(value !== undefined || prop in state.copy_)) ||\n\t\t\t// special case: NaN\n\t\t\t(Number.isNaN(value) && Number.isNaN(state.copy_![prop]))\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyType.ProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (base: any, recipe?: any): any => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => base(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(base, recipe, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\n\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\treturn result.then(nextState => [nextState, patches!, inversePatches!])\n\t\t}\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtype,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === Archtype.Set ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase Archtype.Map:\n\t\t\treturn new Map(value)\n\t\tcase Archtype.Set:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyType,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyType.ES5Array : (ProxyType.ES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyType.ES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyType.ES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyType.ES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyType.ES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (!draft_.hasOwnProperty(i)) {\n\t\t\t\t\tassigned_[i] = true\n\t\t\t\t}\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\t// last descriptor can be not a trap, if the array was extended\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// if we miss a property, it has been deleted, so array probobaly changed\n\t\tfor (let i = 0; i < draft_.length; i++) {\n\t\t\tif (!draft_.hasOwnProperty(i)) return true\n\t\t}\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyType.ES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n","import {immerable} from \"../immer\"\nimport {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyType,\n\tArchtype,\n\tdie,\n\tisDraft,\n\tisDraftable,\n\tNOTHING\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyType.ProxyObject:\n\t\t\tcase ProxyType.ES5Object:\n\t\t\tcase ProxyType.Map:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyType.ES5Array:\n\t\t\tcase ProxyType.ProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyType.Set:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tif (base_.length < copy_.length) {\n\t\t\tinversePatches.push({\n\t\t\t\top: REPLACE,\n\t\t\t\tpath: basePath.concat([\"length\"]),\n\t\t\t\tvalue: base_.length\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\tbaseValue: any,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement === NOTHING ? undefined : replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: baseValue\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tconst parentType = getArchtype(base)\n\t\t\t\tlet p = path[i]\n\t\t\t\tif (typeof p !== \"string\" && typeof p !== \"number\") {\n\t\t\t\t\tp = \"\" + p\n\t\t\t\t}\n\n\t\t\t\t// See #738, avoid prototype pollution\n\t\t\t\tif (\n\t\t\t\t\t(parentType === Archtype.Object || parentType === Archtype.Array) &&\n\t\t\t\t\t(p === \"__proto__\" || p === \"constructor\")\n\t\t\t\t)\n\t\t\t\t\tdie(24)\n\t\t\t\tif (typeof base === \"function\" && p === \"prototype\") die(24)\n\t\t\t\tbase = get(base, p)\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn key === \"-\"\n\t\t\t\t\t\t\t\t? base.push(value)\n\t\t\t\t\t\t\t\t: base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\tif (has(obj, immerable)) cloned[immerable] = obj[immerable]\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n","// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n"],"names":["exports","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","isNaN","abs","floor","log","LN2","die","error","args","Error","length","map","join","isDraft","DRAFT_STATE","isDraftable","proto","Object","getPrototypeOf","Ctor","hasOwnProperty","call","constructor","Function","toString","objectCtorString","Array","isArray","DRAFTABLE","_value$constructor","isMap","isSet","original","base_","each","obj","iter","enumerableOnly","getArchtype","keys","ownKeys","forEach","key","entry","index","thing","state","type_","has","prop","prototype","get","set","propOrOldValue","t","add","is","x","y","target","hasMap","Map","hasSet","Set","latest","copy_","shallowCopy","base","slice","descriptors","getOwnPropertyDescriptors","desc","writable","configurable","enumerable","create","freeze","deep","isFrozen","clear","delete","dontMutateFrozenCollections","getPlugin","pluginKey","plugin","plugins","currentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","result","baseDraft","isReplaced","undefined","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","NOTHING","rootScope","path","childValue","finalizeProperty","scope_","finalized_","draft_","resultEach","generatePatches_","parentState","targetObject","rootPath","targetIsSet","res","assigned_","concat","autoFreeze_","peek","getDescriptorFromProto","source","getOwnPropertyDescriptor","markChanged","prepareCopy","createProxy","parent","traps","arrayTraps","revoke","proxy","proxyMap_","proxySet_","isManual_","objectTraps","Proxy","revocable","createES5Proxy_","getCurrentScope","push","copyHelper","archType","from","enableES5","proxyProperty","this","markChangesSweep","drafts","hasArrayChanges","hasObjectChanges","baseValue","baseIsDraft","descriptor","defineProperty","markChangesRecursively","object","min","hasChanges_","implementation","enablePatches","deepClonePatchValue","entries","n","cloned","immerable","clonePatchValueIfNeeded","applyPatches_","patches","patch","op","parentType","p","type","ADD","splice","basePath","inversePatches","assignedValue","origValue","a","unshift","replacement","hasSymbol","Symbol","hasProxies","Reflect","for","G","getOwnPropertySymbols","getOwnPropertyNames","_desc$get","current","currentState","Number","deleteProperty","owner","setPrototypeOf","fn","arguments","apply","config","produce","recipe","defaultBase","self","_this2","_this","hasError","Promise","then","ip","produceWithPatches","nextState","useProxies","setUseProxies","autoFreeze","setAutoFreeze","createDraft","currentImpl","copy","finishDraft","applyPatches","applyPatchesImpl","bind"],"sourceRoot":""}